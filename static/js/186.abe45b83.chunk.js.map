{"version":3,"file":"static/js/186.abe45b83.chunk.js","mappings":"oRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAU,GAADC,OAAIJ,EAAQ,gCAAAI,OAA+BH,GAC7D,EAEaI,EAAkB,SAAAC,GAC7B,OAAOH,EAAAA,EAAAA,IAAU,GAADC,OAAIJ,EAAQ,WAAAI,OAAUE,EAAO,aAAAF,OAAYH,GAC3D,EAEaM,EAAkB,SAAAD,GAC7B,OAAOH,EAAAA,EAAAA,IAAU,GAADC,OAAIJ,EAAQ,WAAAI,OAAUE,EAAO,qBAAAF,OAAoBH,GACnE,EAEaO,EAAoB,SAAAF,GAC/B,OAAOH,EAAAA,EAAAA,IAAU,GAADC,OAAIJ,EAAQ,WAAAI,OAAUE,EAAO,qBAAAF,OAAoBH,GACnE,EAEaQ,EAAiB,SAAAC,GAC5B,OAAOP,EAAAA,EAAAA,IAAU,GAADC,OACXJ,EAAQ,0BAAAI,OAAyBH,EAAO,WAAAG,OAAUM,GAEzD,C,8ECUA,UA/BgB,WACd,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACRM,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAYxB,OAVAI,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAkBF,GACfa,MAAK,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KACPJ,EAAUI,EAAKC,QACjB,IACCC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,WAClB,GACJ,GAAG,CAACnB,KAGFoB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGZ,EAAOa,OAAS,GACfH,EAAAA,EAAAA,KAAA,MAAAE,SACGZ,EAAOc,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAChCC,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKK,KACLP,EAAAA,EAAAA,KAAA,KAAAE,SAAIM,MAFGF,EAGJ,OAITN,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8BAIX,C","sources":["components/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '19d2d0f24e837c8f3ad6ea805c1086b1';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCastsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const getReviewsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovie = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n};\n","import { getReviewsDetails } from 'components/Api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    getReviewsDetails(movieId)\n      .then(({ data }) => {\n        setReview(data.results);\n      })\n      .catch(error => {\n        throw new Error('ooops...');\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {review.length > 0 ? (\n        <ul>\n          {review.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We dont have any reviews</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","concat","getMovieDetails","movieId","getCastsDetails","getReviewsDetails","getSearchMovie","query","useParams","_useState","useState","_useState2","_slicedToArray","review","setReview","useEffect","then","_ref","data","results","catch","error","Error","_jsx","_Fragment","children","length","map","_ref2","id","author","content","_jsxs"],"sourceRoot":""}
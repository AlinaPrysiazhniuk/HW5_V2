{"version":3,"file":"static/js/359.ed3cb681.chunk.js","mappings":"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","sources":["components/Api.jsx","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/pages/Movies/Movie.module.css?ed9b","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '19d2d0f24e837c8f3ad6ea805c1086b1';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCastsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const getReviewsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovie = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n};\n","/* eslint-disable no-undef */\nimport { useState } from 'react';\n\nconst SearchBar = ({ onSearch }) => {\n  const [movie, setMovie] = useState('');\n\n  const handleChangeQuery = e => {\n    setMovie(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movie.trim() === '') {\n      return alert('Enter data for search');\n    }\n\n    onSearch(movie);\n    setMovie('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"movie\"\n          value={movie}\n          onChange={handleChangeQuery}\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"section_movies\":\"Movie_section_movies__5mvkq\",\"container_movie\":\"Movie_container_movie__F1GFJ\",\"list\":\"Movie_list__3jSH+\",\"item\":\"Movie_item__uYRzM\",\"link\":\"Movie_link__XtdTs\",\"img\":\"Movie_img__PWLne\",\"text\":\"Movie_text__65fbV\"};","/* eslint-disable no-undef */\nimport { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'components/Api';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport noImage from '../../no-image.jpeg';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './Movie.module.css';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    getSearchMovie(searchQuery)\n      .then(({ data }) => {\n        if (data.results.length === 0) {\n          toast.error(`There are no movies on your request \"${searchQuery}\"`);\n          setMovies([]);\n        }\n        setMovies(data.results);\n      })\n      .catch(error => {\n        throw new Error('...ooopppsssss');\n      });\n  }, [searchQuery]);\n\n  const onSubmit = searchQuery => {\n    setSearchParams({ query: `${searchQuery}` });\n  };\n\n  return (\n    <section className={css.section_movies}>\n      <div>Movies List</div>\n      <SearchBar onSearch={onSubmit} />\n\n      <div className={css.container_movie}>\n        {movies && (\n          <>\n            <ul className={css.list}>\n              {movies.map(({ id, poster_path, title }) => (\n                <li key={id} className={css.item}>\n                  <Link\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                    className={css.link}\n                  >\n                    <img\n                      className={css.img}\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n                          : noImage\n                      }\n                      alt={title}\n                    />\n                    <p className={css.text}>{title}</p>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Movie;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","concat","getMovieDetails","movieId","getCastsDetails","getReviewsDetails","getSearchMovie","query","_ref","onSearch","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","trim","alert","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","then","data","results","length","toast","catch","error","Error","className","css","SearchBar","map","_ref2","id","poster_path","title","Link","to","state","from","src","noImage","alt"],"sourceRoot":""}
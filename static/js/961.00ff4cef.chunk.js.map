{"version":3,"file":"static/js/961.00ff4cef.chunk.js","mappings":"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","sources":["components/Api.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '19d2d0f24e837c8f3ad6ea805c1086b1';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCastsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const getReviewsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovie = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n};\n","import { getMovieDetails } from 'components/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport noImage from '../../no-image.jpeg';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(({ data }) => {\n        setMovie(data);\n      })\n      .catch(error => {\n        throw new Error(\n          'woops, something went wromg... Please, try agin later.'\n        );\n      });\n  }, [movieId]);\n\n  const { title, overview, vote_average, genres, poster_path } = movie;\n\n  return (\n    <section>\n      <>\n        <h1>{title}</h1>\n        <Link to={backLink}>Go back</Link>\n\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n              : noImage\n          }\n          alt={title}\n        />\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        {genres && (\n          <>\n            <h3>Genres</h3>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>\n                  <p>{name}</p>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n        <section>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: location?.state?.from }}>\n                Casts\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: location?.state?.from }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </section>\n\n        <Outlet />\n      </>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","concat","getMovieDetails","movieId","getCastsDetails","getReviewsDetails","getSearchMovie","query","_location$state$from","_location$state","_location$state2","_location$state3","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useParams","location","useLocation","backLink","state","from","useEffect","then","_ref","data","catch","error","Error","title","overview","vote_average","genres","poster_path","_jsx","children","_jsxs","_Fragment","Link","to","src","noImage","alt","Math","round","map","_ref2","id","name","Outlet"],"sourceRoot":""}
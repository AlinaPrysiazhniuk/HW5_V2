{"version":3,"file":"static/js/389.05b880c4.chunk.js","mappings":"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","sources":["components/Api.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '19d2d0f24e837c8f3ad6ea805c1086b1';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getCastsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const getReviewsDetails = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovie = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n};\n","/* eslint-disable no-undef */\nimport { useState } from 'react';\n\nconst SearchBar = ({ onSearch }) => {\n  const [movie, setMovie] = useState('');\n\n  const handleChangeQuery = e => {\n    setMovie(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movie.trim() === '') {\n      return alert('Enter data for search');\n    }\n\n    onSearch(movie);\n    setMovie('');\n    console.log(movie);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"movie\"\n          value={movie}\n          onChange={handleChangeQuery}\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchBar;\n","/* eslint-disable no-undef */\nimport { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'components/Api';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport noImage from '../../no-image.jpeg';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    getSearchMovie(searchQuery)\n      .then(({ data }) => {\n        if (data.results.length === 0) {\n          toast.error(`There are no movies on your request \"${searchQuery}\"`);\n          setMovies([]);\n        }\n        setMovies(data.results);\n      })\n      .catch(error => {\n        throw new Error('...ooopppsssss');\n      });\n  }, [searchQuery]);\n\n  const onSubmit = searchQuery => {\n    setSearchParams({ query: `${searchQuery}` });\n  };\n\n  return (\n    <>\n      <div>Movies List</div>\n      <SearchBar onSearch={onSubmit} />\n\n      {movies && (\n        <>\n          <ul>\n            {movies.map(({ id, poster_path, title }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n                        : noImage\n                    }\n                    alt={title}\n                  />\n                  <p>{title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","concat","getMovieDetails","movieId","getCastsDetails","getReviewsDetails","getSearchMovie","query","_ref","onSearch","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","trim","alert","console","log","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","then","data","results","length","toast","catch","error","Error","SearchBar","map","_ref2","id","poster_path","title","Link","to","state","from","src","noImage","alt"],"sourceRoot":""}